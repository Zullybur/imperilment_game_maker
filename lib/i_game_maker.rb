require 'lib/game_builder'
require 'uri'
require 'pry'

class IGameMaker
  def submit_games(count, start_date)
    uri = URI "http://localhost:3000"
    # Ensure game starts on a Monday
    date = adjust_date_to_monday start_date
    
    gb = GameBuilder.new count

    # Create an imperilment game for each game generated by game builder
    gb.games.each do |categories|
      Net::HTTP.start uri.host, uri.port do |http|
        game_id = create_game http, uri, date

        # Create the categories required for the current game
        categories.each do |category|
          category_id = create_category http, uri, category.name

          # Create the answers for the current category
          category.clues.each do |clue|
            create_answer(http, uri, game_id, category_id, 
                          clue.answer, clue.question, clue.value, date)
            date += (60*60*24) 
          end
        end
      end
    end
  end

  private
  def adjust_date_to_monday date
    tmp = date.dup
    until tmp.monday? do
      tmp += (60*60*24)
    end
    tmp
  end

  def create_game http, uri, date
    uri.path = "/games"
    req = Net::HTTP::Post.new uri
    req["authorization"] = 'Basic YWRtaW5AZXhhbXBsZS5jb206dGVzdDEyMw=='
    req.set_form_data("game[ended_at]": date)
    res = http.request req
    res.to_hash["location"].first[(uri.to_s.length + 1)..-1].to_i
  end

  def create_category http, uri, name
    uri.path = "/categories"
    req = Net::HTTP::Post.new uri
    req["authorization"] = 'Basic YWRtaW5AZXhhbXBsZS5jb206dGVzdDEyMw=='
    req.set_form_data("category[name]": name)
    res = http.request req

    cat_id = res.to_hash["location"].first[(uri.to_s.length + 1)..-1].to_i
  end

  def create_answer http, uri, game_id, cat_id, ans, ques, val, date
    uri.path = "/games/#{game_id}/answers"
    req = Net::HTTP::Post.new uri
    req["authorization"] = 'Basic YWRtaW5AZXhhbXBsZS5jb206dGVzdDEyMw=='
    req.set_form_data(
      "answer[category_id]": cat_id,
      "answer[answer]": ans,
      "answer[correct_question]": ques,
      "answer[amount]": val,
      "answer[start_date]": date
    )

    res = http.request req
  end
end
